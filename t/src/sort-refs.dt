(import cstdio)
(import derivations)
(import concepts)
(import algorithms)
(import vector)

(using-namespace std.concepts

(def mys (struct intern ((a int) (b int) (c int))))

(def init
  (fn intern bool ((dst (ref mys)) (a int) (b int) (c int))
    (setf (:@ dst a) a)
    (setf (:@ dst b) b)
    (setf (:@ dst c) c)
    true))

(def setf-copy (fn intern bool ((dst (p mys)) (src (p mys)))
  (printf ".")
  (setf (:@ dst a) (@:@ src a))
  (setf (:@ dst b) (@:@ src b))
  (setf (:@ dst c) (@:@ src c))
  true))

(def setf-assign (fn intern bool ((dst (p mys)) (src (p mys)))
  (setf-copy dst src)))

(implement PreferRefs mys)
(implement Type mys)
(implement Struct mys)
(instantiate swap mys)

(mfor Op (= != < <= > >=)
  (instantiate Op mys))
(mfor C (Assignable EqualityComparable LessThanComparable)
  (implement C mys))

(instantiate Vector mys)

(mfor Cm (sort)
  (instantiate Cm (Iterator (Vector mys))))

(def main (fn extern-c int (void)
  (def a (var auto mys (init a 1 2 3)))
  (def b (var auto mys (init b 1 2 4)))
  (def c (var auto mys (init c 1 3 4)))
  (def d (var auto mys (init d 2 3 4)))

  (let ((vec (Vector mys)))
    (push-back vec a)
    (push-back vec b)
    (push-back vec c)
    (push-back vec d)
    (printf "Presort\n")
    (sort (begin vec) (end vec))
    (printf "Postsort\n"))

  0))
)

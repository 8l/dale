#!/usr/bin/perl

use strict;
use warnings;

my @files = qw(
    2-1-introspection.md
    2-2-ctype.md
    2-3-math.md
    2-4-macros-core.md
    2-5-stdlib.md
    2-6-macros.md
    2-7-assert.md
    2-8-concepts-core.md
    2-9-concept-defs.md
    2-10-concepts.md
    2-11-utility.md
    2-12-derivations.md
    2-13-algorithms.md
    2-14-list.md
    2-15-vector.md
    2-16-set.md
    2-17-map.md
    2-18-array.md
    2-19-shared-ptr.md
    3-1-cerrno.md
    3-2-cfloat.md
    3-3-clocale.md
    3-4-cmath.md
    3-5-csignal.md
    3-6-cstdio-core.md
    3-7-cstdio.md
    3-8-ctime.md
    3-9-cstdlib.md
    3-10-cstring.md
    3-11-cctype.md
    3-12-ctype.md
    3-13-csetjmp.md
);

sub file_to_title
{
    my ($file) = @_;
    $file =~ s/\.md//;
    $file =~ s/-/./;
    $file =~ s/-/ /;
    return $file;
}

sub file_to_name
{
    my ($file) = @_;
    $file =~ s/\.md//;
    $file =~ s/^\d+-\d+-//;
    return $file;
}

for (my $i = 0; $i < @files; $i++) {
    my $file = $files[$i];
    my $title = file_to_title($file);
    my $name  = file_to_name($file);
    my $prev_file = ($i > 0)       ? $files[$i - 1] : undef;
    my $next_file = ($i < $#files) ? $files[$i + 1] : undef;
    open my $fh, '>', "doc/$file" or die $!;
    print $fh "# Dale\n\n";
    my $nav_str = '';
    if (!$prev_file) {
        $prev_file = "1-11-form-reference.md";
    }
    $nav_str .= "[Previous](./$prev_file)";
    if ($next_file) {
        $nav_str .= " | ";
        $nav_str .= "[Next](./$next_file)";
    }
    $nav_str .= "\n\n";
    print $fh "$nav_str";
    print $fh "## $title\n\n";
    close $fh;
    my $res = system("./module-to-markdown < modules/$name.dt >> doc/$file");
    if ($res != 0) {
        die "module-to-markdown failed";
    }
    open $fh, '>>', "doc/$file" or die $!;
    print $fh "$nav_str";
    close $fh;
}
